#ifndef INSTRUCTIONS_H
#define INSTRUCTIONS_H

enum instruction {
    INST_PUSH_CONST,
    INST_PUSH_CLOSURE,
    INST_APPEND_METHODS,

    INST_ADD,
    INST_SUB,
    INST_MUL,
    INST_DIV,
    INST_MOD,

    INST_DEF_LOCAL,
    INST_GET_LOCAL,
    INST_SET_LOCAL,

    INST_GET_UPVALUE,
    INST_SET_UPVALUE,

    INST_DEF_GLOBAL,
    INST_GET_GLOBAL,
    INST_SET_GLOBAL,

    INST_GET_PROPERTY,
    INST_SET_PROPERTY,

    INST_POP,
    INST_POP_LOCAL,
    INST_POPN_LOCAL,

    INST_CLOSE_UPVALUE,

    INST_JUMP,
    INST_JUMP_TRUE,
    INST_JUMP_FALSE,
    INST_JUMP_HAS_NO_NEXT,
    INST_LOOP,

    INST_EQUAL,
    INST_NOT_EQUAL,

    INST_GREATER,
    INST_GREATER_EQUAL,

    INST_LESS,
    INST_LESS_EQUAL,

    INST_AND,
    INST_OR,

    INST_NOT,
    INST_NEGATE,

    INST_CALL,
    INST_CALL_PROPERTY, // GET_PROPERTY + CALL

    INST_RETURN,
    INST_RETURN_VOID, // PUSH_VOID + RETURN

    INST_PUSH_TRUE,
    INST_PUSH_FALSE,
    
    INST_PUSH_NIL,
    INST_PUSH_VOID,

    INST_MAKE_RANGE,
    INST_MAKE_INCL_RANGE,
    INST_MAKE_ITERATOR,

    INST_GET_NEXT,
    INST_ADVANCE,

    INST_EXIT_SUCCESS,
    INST_EXIT,

    // TODO: extend this to accept more types, if necessary
    INST_ASSERT_BOOL,
};

#endif
